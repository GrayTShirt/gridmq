/*
    Copyright (c) 2012 Martin Sustrik  All rights reserved.

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom
    the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
    IN THE SOFTWARE.
*/

#ifndef GRID_EP_INCLUDED
#define GRID_EP_INCLUDED

#include "../transport.h"

#include "../aio/fsm.h"

#include "../utils/list.h"

/*  Events generated by the grid_ep object. */
#define GRID_EP_STOPPED 1

struct grid_ep {
    struct grid_fsm fsm;
    int state;
    struct grid_epbase *epbase;
    struct grid_sock *sock;
    struct grid_ep_options options;
    int eid;
    struct grid_list_item item;
    char addr [GRID_SOCKADDR_MAX + 1];

    /*  Error state for endpoint */
    int last_errno;
};

int grid_ep_init (struct grid_ep *self, int src, struct grid_sock *sock, int eid,
    struct grid_transport *transport, int bind, const char *addr);
void grid_ep_term (struct grid_ep *self);

void grid_ep_start (struct grid_ep *self);
void grid_ep_stop (struct grid_ep *self);

void grid_ep_stopped (struct grid_ep *self);

struct grid_ctx *grid_ep_getctx (struct grid_ep *self);
const char *grid_ep_getaddr (struct grid_ep *self);
void grid_ep_getopt (struct grid_ep *self, int level, int option,
    void *optval, size_t *optvallen);
int grid_ep_ispeer (struct grid_ep *self, int socktype);
void grid_ep_set_error(struct grid_ep *self, int errnum);
void grid_ep_clear_error(struct grid_ep *self);
void grid_ep_stat_increment(struct grid_ep *self, int name, int increment);

#endif
